# This viminfo file was generated by Vim 8.2.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=latin1


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0~/printf

# Last Substitute Search Pattern:
~MSle0&\r

# Last Substitute String:
$

# Command Line History (newest to oldest):
:q
|2,0,1608032025,,"q"
:Q
|2,0,1608032024,,"Q"
:w
|2,0,1607459705,,"w"
:W
|2,0,1607459704,,"W"
:s
|2,0,1607331674,,"s"
::w
|2,0,1606855012,,":w"
:L:q
|2,0,1604438901,,"L:q"
:e rezultatai.txt
|2,0,1604436271,,"e rezultatai.txt"
:!./%:r.out
|2,0,1604314761,,"!./%:r.out"
:q!
|2,0,1604164927,,"q!"
:wq
|2,0,1604057400,,"wq"
:.!./%:r.out
|2,0,1603701726,,".!./%:r.out"
:q14
|2,0,1603650413,,"q14"
:%s/\r//g 
|2,0,1603650391,,"%s/\\r//g "
:bn
|2,0,1603650387,,"bn"
:%s/nonNegative/interval/g
|2,0,1603650342,,"%s/nonNegative/interval/g"
:bp
|2,0,1603650289,,"bp"
:%s/^M//g
|2,0,1603649715,,"%s/^M//g"
:88
|2,0,1602778392,,"88"
:4
|2,0,1602778390,,"4"
:3
|2,0,1602778388,,"3"
:2
|2,0,1602778384,,"2"
:w pvz2.dbg
|2,0,1600934613,,"w pvz2.dbg"

# Search String History (newest to oldest):
?/printf
|2,1,1606684147,47,"printf"
?/strlen
|2,1,1606684142,47,"strlen"
?/O
|2,1,1604312096,47,"O"
?/!
|2,1,1603699768,47,"!"
?/int main
|2,1,1603656022,47,"int main"
? \r
|2,1,1603650391,,"\\r"
? nonNegative
|2,1,1603650342,,"nonNegative"
? ^M
|2,1,1603649715,,"^M"
?/4:
|2,1,1602172758,47,"4:"
?/0
|2,1,1602172430,47,"0"
?/luke
|2,1,1601301451,47,"luke"
?/fn
|2,1,1600597663,47,"fn"
?/teams
|2,1,1600361906,47,"teams"
?/4
|2,1,1600147309,47,"4"
?/bsod
|2,1,1599404652,47,"bsod"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
"0	CHAR	0
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	#include <assert.h>
	
	char  *strdog(char *vienas,char *antras){//printf("%s\n",*vienas);//kai veiks sitas tada strncat(kas yra char * dest char * string, int max elements)
	    int total=strlen(vienas)+strlen(antras);
		int size=strlen(vienas);
	    for(int i=0;i<strlen(antras);i++){            
			vienas[i+size]=antras[i]; 
	   	}
	    return vienas;
	}
	int main()
	{
		char kazkas[10]="labas",kazkas2[10]="hillow";
		char *test=malloc(100*sizeof(char));
		test[99]='\0';
		strdog(test,kazkas);
		printf("%s\n",test);
		strdog(kazkas,kazkas2);
		printf("%s\n",kazkas);
		strdog(test,kazkas);
		printf("%s\n",test);
	    return 0;
	}
|3,0,0,0,26,0,1606855880,"#include <stdio.h>","#include <stdlib.h>","#include <string.h>","#include <assert.h>","","char  *strdog(char *vienas,char *antras){//printf(\"%s\\n\",*vienas);//kai veiks sitas tada strncat(kas yra char * dest char * string, int max elements)","    int total=strlen(vienas)+strlen(antras);","	int size=strlen(vienas);","    for(int i=0;i<strlen(antras);i++){            ","		vienas[i+size]=antras[i]; ","   	}","    return vienas;","}",>12
|<"int main()","{","	char kazkas[10]=\"labas\",kazkas2[10]=\"hillow\";","	char *test=malloc(100*sizeof(char));","	test[99]='\\0';","	strdog(test,kazkas);","	printf(\"%s\\n\",test);","	strdog(kazkas,kazkas2);","	printf(\"%s\\n\",kazkas);","	strdog(test,kazkas);","	printf(\"%s\\n\",test);","    return 0;","}"
""1	CHAR	0
	
	
	struct zmogus{
		int amzius;
		int ugis;
		string vardas....;
		}
	
	
	
	
	struct kazkas{
		int a,b,c;
	
	
		}
	typedef struct kazkas kazkas;
	
	
	kazkas *temp=malloc(10*sizeof(kazkas));
	
	(*temp).a=100;
	temp->a=100;
	
	&
	*
	
	*( (*arr)+i)
|3,1,1,0,28,0,1607448822,"","","struct zmogus{","	int amzius;","	int ugis;","	string vardas....;","	}","","","","","struct kazkas{","	int a,b,c;","","","	}","typedef struct kazkas kazkas;","","","kazkas *temp=malloc(10*sizeof(kazkas));","","(*temp).a=100;","temp->a=100;","","&","*","","*( (*arr)+i)"
"2	LINE	0
	
|3,0,2,1,1,0,1607448535,""
"3	LINE	0
	struct kazkas
|3,0,3,1,1,0,1607448535,"struct kazkas"
"4	LINE	0
	
|3,0,4,1,1,0,1607448534,""
"5	LINE	0
	
|3,0,5,1,1,0,1607448534,""
"6	LINE	0
	
|3,0,6,1,1,0,1607448534,""
"7	LINE	0
	
|3,0,7,1,1,0,1607448533,""
"8	LINE	0
	
|3,0,8,1,